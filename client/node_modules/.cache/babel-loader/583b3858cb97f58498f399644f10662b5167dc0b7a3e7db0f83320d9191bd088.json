{"ast":null,"code":"// This optional code is used to register the service worker for the PWA\n\nconst isLocalhost = Boolean(window.location.hostname === \"localhost\" || window.location.hostname === \"[::1]\" || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)){3}$/));\nexport function register() {\n  if (\"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker) {\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      }\n    };\n  }).catch(error => console.error(\"Error registering service worker:\", error));\n}\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl).then(response => {\n    var _response$headers$get;\n    if (response.status === 404 || ((_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.indexOf(\"javascript\")) === -1) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    } else {\n      registerValidSW(swUrl);\n    }\n  }).catch(() => console.log(\"No internet connection found. App is running in offline mode.\"));\n}\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","addEventListener","swUrl","process","env","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","_response$headers$get","status","headers","get","indexOf","ready","unregister"],"sources":["/Users/dweejpandya/family-location-pwa/src/serviceWorkerRegistration.js"],"sourcesContent":["// This optional code is used to register the service worker for the PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n      window.location.hostname === \"[::1]\" ||\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register() {\n    if (\"serviceWorker\" in navigator) {\n      window.addEventListener(\"load\", () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          checkValidServiceWorker(swUrl);\n        } else {\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker) {\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === \"installed\") {\n                if (navigator.serviceWorker.controller) {\n                  console.log(\"New content is available; please refresh.\");\n                } else {\n                  console.log(\"Content is cached for offline use.\");\n                }\n              }\n            };\n          }\n        };\n      })\n      .catch((error) => console.error(\"Error registering service worker:\", error));\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    fetch(swUrl)\n      .then((response) => {\n        if (response.status === 404 || response.headers.get(\"content-type\")?.indexOf(\"javascript\") === -1) {\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n          });\n        } else {\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => console.log(\"No internet connection found. App is running in offline mode.\"));\n  }\n  \n  export function unregister() {\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister();\n      });\n    }\n  }\n  "],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CACvBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IACtCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO,IACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,yDACF,CACJ,CAAC;AAED,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,IAAI,eAAe,IAAIC,SAAS,EAAE;IAChCL,MAAM,CAACM,gBAAgB,CAAC,MAAM,EAAE,MAAM;MACpC,MAAMC,KAAK,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB;MAE3D,IAAIZ,WAAW,EAAE;QACfa,uBAAuB,CAACJ,KAAK,CAAC;MAChC,CAAC,MAAM;QACLK,eAAe,CAACL,KAAK,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASK,eAAeA,CAACL,KAAK,EAAE;EAC9BF,SAAS,CAACQ,aAAa,CACpBT,QAAQ,CAACG,KAAK,CAAC,CACfO,IAAI,CAAEC,YAAY,IAAK;IACtBA,YAAY,CAACC,aAAa,GAAG,MAAM;MACjC,MAAMC,gBAAgB,GAAGF,YAAY,CAACG,UAAU;MAChD,IAAID,gBAAgB,EAAE;QACpBA,gBAAgB,CAACE,aAAa,GAAG,MAAM;UACrC,IAAIF,gBAAgB,CAACG,KAAK,KAAK,WAAW,EAAE;YAC1C,IAAIf,SAAS,CAACQ,aAAa,CAACQ,UAAU,EAAE;cACtCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;YAC1D,CAAC,MAAM;cACLD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;YACnD;UACF;QACF,CAAC;MACH;IACF,CAAC;EACH,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC,CAAC;AAChF;AAEA,SAASd,uBAAuBA,CAACJ,KAAK,EAAE;EACtCmB,KAAK,CAACnB,KAAK,CAAC,CACTO,IAAI,CAAEa,QAAQ,IAAK;IAAA,IAAAC,qBAAA;IAClB,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,EAAAD,qBAAA,GAAAD,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,cAAAH,qBAAA,uBAApCA,qBAAA,CAAsCI,OAAO,CAAC,YAAY,CAAC,MAAK,CAAC,CAAC,EAAE;MACjG3B,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAAEC,YAAY,IAAK;QACnDA,YAAY,CAACmB,UAAU,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLtB,eAAe,CAACL,KAAK,CAAC;IACxB;EACF,CAAC,CAAC,CACDiB,KAAK,CAAC,MAAMF,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC,CAAC;AAC9F;AAEA,OAAO,SAASW,UAAUA,CAAA,EAAG;EAC3B,IAAI,eAAe,IAAI7B,SAAS,EAAE;IAChCA,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAAEC,YAAY,IAAK;MACnDA,YAAY,CAACmB,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}