{"ast":null,"code":"// This optional code is used to register the service worker for the PWA\nconst isLocalhost=Boolean(window.location.hostname===\"localhost\"||window.location.hostname===\"[::1]\"||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)){3}$/));export function register(){if(\"serviceWorker\"in navigator){window.addEventListener(\"load\",()=>{const swUrl=\"\".concat(process.env.PUBLIC_URL,\"/service-worker.js\");if(isLocalhost){checkValidServiceWorker(swUrl);}else{registerValidSW(swUrl);}});}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker){installingWorker.onstatechange=()=>{if(installingWorker.state===\"installed\"){if(navigator.serviceWorker.controller){console.log(\"New content is available; please refresh.\");}else{console.log(\"Content is cached for offline use.\");}}};}};}).catch(error=>console.error(\"Error registering service worker:\",error));}function checkValidServiceWorker(swUrl){fetch(swUrl).then(response=>{var _response$headers$get;if(response.status===404||((_response$headers$get=response.headers.get(\"content-type\"))===null||_response$headers$get===void 0?void 0:_response$headers$get.indexOf(\"javascript\"))===-1){navigator.serviceWorker.ready.then(registration=>{registration.unregister();});}else{registerValidSW(swUrl);}}).catch(()=>console.log(\"No internet connection found. App is running in offline mode.\"));}export function unregister(){if(\"serviceWorker\"in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","addEventListener","swUrl","concat","process","env","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","_response$headers$get","status","headers","get","indexOf","ready","unregister"],"sources":["/Users/dweejpandya/family-location-pwa/client/src/serviceWorkerRegistration.js"],"sourcesContent":["// This optional code is used to register the service worker for the PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n      window.location.hostname === \"[::1]\" ||\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register() {\n    if (\"serviceWorker\" in navigator) {\n      window.addEventListener(\"load\", () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          checkValidServiceWorker(swUrl);\n        } else {\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker) {\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === \"installed\") {\n                if (navigator.serviceWorker.controller) {\n                  console.log(\"New content is available; please refresh.\");\n                } else {\n                  console.log(\"Content is cached for offline use.\");\n                }\n              }\n            };\n          }\n        };\n      })\n      .catch((error) => console.error(\"Error registering service worker:\", error));\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    fetch(swUrl)\n      .then((response) => {\n        if (response.status === 404 || response.headers.get(\"content-type\")?.indexOf(\"javascript\") === -1) {\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n          });\n        } else {\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => console.log(\"No internet connection found. App is running in offline mode.\"));\n  }\n  \n  export function unregister() {\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister();\n      });\n    }\n  }\n  "],"mappings":"AAAA;AAEA,KAAM,CAAAA,WAAW,CAAGC,OAAO,CACvBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACtCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,OAAO,EACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,yDACF,CACJ,CAAC,CAED,MAAO,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACzB,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChCL,MAAM,CAACM,gBAAgB,CAAC,MAAM,CAAE,IAAM,CACpC,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,UAAU,sBAAoB,CAE3D,GAAIb,WAAW,CAAE,CACfc,uBAAuB,CAACL,KAAK,CAAC,CAChC,CAAC,IAAM,CACLM,eAAe,CAACN,KAAK,CAAC,CACxB,CACF,CAAC,CAAC,CACJ,CACF,CAEA,QAAS,CAAAM,eAAeA,CAACN,KAAK,CAAE,CAC9BF,SAAS,CAACS,aAAa,CACpBV,QAAQ,CAACG,KAAK,CAAC,CACfQ,IAAI,CAAEC,YAAY,EAAK,CACtBA,YAAY,CAACC,aAAa,CAAG,IAAM,CACjC,KAAM,CAAAC,gBAAgB,CAAGF,YAAY,CAACG,UAAU,CAChD,GAAID,gBAAgB,CAAE,CACpBA,gBAAgB,CAACE,aAAa,CAAG,IAAM,CACrC,GAAIF,gBAAgB,CAACG,KAAK,GAAK,WAAW,CAAE,CAC1C,GAAIhB,SAAS,CAACS,aAAa,CAACQ,UAAU,CAAE,CACtCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC,CAC1D,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CACF,CACF,CAAC,CACH,CACF,CAAC,CACH,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAKH,OAAO,CAACG,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAAC,CAChF,CAEA,QAAS,CAAAd,uBAAuBA,CAACL,KAAK,CAAE,CACtCoB,KAAK,CAACpB,KAAK,CAAC,CACTQ,IAAI,CAAEa,QAAQ,EAAK,KAAAC,qBAAA,CAClB,GAAID,QAAQ,CAACE,MAAM,GAAK,GAAG,EAAI,EAAAD,qBAAA,CAAAD,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,UAAAH,qBAAA,iBAApCA,qBAAA,CAAsCI,OAAO,CAAC,YAAY,CAAC,IAAK,CAAC,CAAC,CAAE,CACjG5B,SAAS,CAACS,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAAEC,YAAY,EAAK,CACnDA,YAAY,CAACmB,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACJ,CAAC,IAAM,CACLtB,eAAe,CAACN,KAAK,CAAC,CACxB,CACF,CAAC,CAAC,CACDkB,KAAK,CAAC,IAAMF,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC,CAAC,CAC9F,CAEA,MAAO,SAAS,CAAAW,UAAUA,CAAA,CAAG,CAC3B,GAAI,eAAe,EAAI,CAAA9B,SAAS,CAAE,CAChCA,SAAS,CAACS,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAAEC,YAAY,EAAK,CACnDA,YAAY,CAACmB,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}