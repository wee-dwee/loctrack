{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import axios from'axios';// Function to get the actual GPS coordinates using the Geolocation API\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getLocation=(successCallback,errorCallback)=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(successCallback,errorCallback);}else{errorCallback(\"Geolocation is not supported by this browser.\");}};// Function to encode data to Base64\nconst encodeData=(latitude,longitude)=>{const data=\"\".concat(latitude,\",\").concat(longitude);return btoa(data);// Base64 encode the coordinates\n};// Function to send location to the backend\nconst sendLocationToServer=(latitude,longitude,memberName)=>{const encodedLocation=encodeData(latitude,longitude);axios.post('http://localhost:5002/api/location',{name:memberName,location:encodedLocation// Sending encoded coordinates\n}).then(response=>{console.log('Location sent successfully:',response.data);}).catch(error=>{console.error('Error sending location:',error);});};// Function to open Google Maps with the given coordinates\nconst openMap=(latitude,longitude)=>{const url=\"https://www.google.com/maps?q=\".concat(latitude,\",\").concat(longitude);window.open(url,'_blank');};function App(){const[userName,setUserName]=useState('');const[isNameEntered,setIsNameEntered]=useState(false);const[usersList,setUsersList]=useState([]);const[location,setLocation]=useState({latitude:null,longitude:null});// Handle name input change\nconst handleNameChange=event=>{setUserName(event.target.value);};// Handle name submission\nconst handleSubmitName=()=>{if(userName.trim()){setIsNameEntered(true);// Fetch all users and their locations\nfetchUsersLocations();}else{alert(\"Please enter your name.\");}};// Fetch all users and their locations from the backend\nconst fetchUsersLocations=()=>{axios.get('http://localhost:5002/api/locations').then(response=>{setUsersList(response.data);}).catch(error=>{console.error('Error fetching locations:',error);});};// Start location update interval and fetching locations\nuseEffect(()=>{if(isNameEntered){const locationInterval=setInterval(()=>{// Update user location every 10 seconds\ngetLocation(position=>{const latitude=position.coords.latitude;const longitude=position.coords.longitude;console.log(\"\".concat(userName,\"'s location: Latitude: \").concat(latitude,\", Longitude: \").concat(longitude));setLocation({latitude,longitude});sendLocationToServer(latitude,longitude,userName);},error=>{alert(\"Error: \".concat(error.message));});},10000);// Update every 10 seconds\nconst usersInterval=setInterval(()=>{// Fetch all users and their locations every 10 seconds\nfetchUsersLocations();},10000);// Fetch users every 10 seconds\n// Cleanup on component unmount\nreturn()=>{clearInterval(locationInterval);clearInterval(usersInterval);};}},[isNameEntered,userName]);// Only start intervals once the name is entered\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Family Location Tracker\"}),!isNameEntered?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your name\",value:userName,onChange:handleNameChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitName,children:\"Submit\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",userName,\"!\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>openMap(location.latitude,location.longitude),children:\"Your Location\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendLocationToServer(location.latitude,location.longitude,userName),children:\"Update Your Location Now\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Family Members\"}),usersList.map((user,index)=>user.name.trim().toUpperCase()!==userName.trim().toUpperCase()&&/*#__PURE__*/// Exclude user's own name\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[user.name,\" - Latitude: \",user.latitude,\", Longitude: \",user.longitude]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>openMap(user.latitude,user.longitude),children:[\"View \",user.name,\"'s Location on Google Maps\"]})]},index))]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","getLocation","successCallback","errorCallback","navigator","geolocation","getCurrentPosition","encodeData","latitude","longitude","data","concat","btoa","sendLocationToServer","memberName","encodedLocation","post","name","location","then","response","console","log","catch","error","openMap","url","window","open","App","userName","setUserName","isNameEntered","setIsNameEntered","usersList","setUsersList","setLocation","handleNameChange","event","target","value","handleSubmitName","trim","fetchUsersLocations","alert","get","locationInterval","setInterval","position","coords","message","usersInterval","clearInterval","className","children","type","placeholder","onChange","onClick","map","user","index","toUpperCase"],"sources":["/Users/dweejpandya/family-location-pwa/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n// Function to get the actual GPS coordinates using the Geolocation API\nconst getLocation = (successCallback, errorCallback) => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n  } else {\n    errorCallback(\"Geolocation is not supported by this browser.\");\n  }\n};\n\n// Function to encode data to Base64\nconst encodeData = (latitude, longitude) => {\n  const data = `${latitude},${longitude}`;\n  return btoa(data);  // Base64 encode the coordinates\n};\n\n// Function to send location to the backend\nconst sendLocationToServer = (latitude, longitude, memberName) => {\n  const encodedLocation = encodeData(latitude, longitude);\n\n  axios.post('http://localhost:5002/api/location', {\n    name: memberName,\n    location: encodedLocation  // Sending encoded coordinates\n  })\n    .then((response) => {\n      console.log('Location sent successfully:', response.data);\n    })\n    .catch((error) => {\n      console.error('Error sending location:', error);\n    });\n};\n\n// Function to open Google Maps with the given coordinates\nconst openMap = (latitude, longitude) => {\n  const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n  window.open(url, '_blank');\n};\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isNameEntered, setIsNameEntered] = useState(false);\n  const [usersList, setUsersList] = useState([]);\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\n\n  // Handle name input change\n  const handleNameChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  // Handle name submission\n  const handleSubmitName = () => {\n    if (userName.trim()) {\n      setIsNameEntered(true);\n      // Fetch all users and their locations\n      fetchUsersLocations();\n    } else {\n      alert(\"Please enter your name.\");\n    }\n  };\n\n  // Fetch all users and their locations from the backend\n  const fetchUsersLocations = () => {\n    axios.get('http://localhost:5002/api/locations')\n      .then((response) => {\n        setUsersList(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching locations:', error);\n      });\n  };\n\n  // Start location update interval and fetching locations\n  useEffect(() => {\n    if (isNameEntered) {\n      const locationInterval = setInterval(() => {\n        // Update user location every 10 seconds\n        getLocation(\n          (position) => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            console.log(`${userName}'s location: Latitude: ${latitude}, Longitude: ${longitude}`);\n            setLocation({ latitude, longitude });\n            sendLocationToServer(latitude, longitude, userName);\n          },\n          (error) => {\n            alert(`Error: ${error.message}`);\n          }\n        );\n      }, 10000); // Update every 10 seconds\n\n      const usersInterval = setInterval(() => {\n        // Fetch all users and their locations every 10 seconds\n        fetchUsersLocations();\n      }, 10000); // Fetch users every 10 seconds\n\n      // Cleanup on component unmount\n      return () => {\n        clearInterval(locationInterval);\n        clearInterval(usersInterval);\n      };\n    }\n  }, [isNameEntered, userName]);  // Only start intervals once the name is entered\n\n  return (\n    <div className=\"App\">\n      <h1>Family Location Tracker</h1>\n\n      {!isNameEntered ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={userName}\n            onChange={handleNameChange}\n          />\n          <button onClick={handleSubmitName}>Submit</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Welcome, {userName}!</h2>\n          <button onClick={() => openMap(location.latitude, location.longitude)}>\n            Your Location\n          </button>\n          <button onClick={() => sendLocationToServer(location.latitude, location.longitude, userName)}>\n            Update Your Location Now\n          </button>\n          <div className=\"buttons\">\n            <h3>Family Members</h3>\n            {usersList.map((user, index) => (\n              user.name.trim().toUpperCase() !== userName.trim().toUpperCase() && ( // Exclude user's own name\n                <div key={index}>\n                  <p>{user.name} - Latitude: {user.latitude}, Longitude: {user.longitude}</p>\n                  <button onClick={() => openMap(user.latitude, user.longitude)}>\n                    View {user.name}'s Location on Google Maps\n                  </button>\n                </div>\n              )\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}